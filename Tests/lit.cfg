# -*- Python -*-

import os
import platform

import lit
import lit.formats

### Helper Functions

def make_path(*args):
  return os.path.normpath(os.path.join(*args))

kIsWindows = platform.system() == 'Windows'

###

config.name = 'ids'

ids_src_root = getattr(config, 'ids_src_root', None)
if not ids_src_root:
  lit_config.fatal("missing 'ids_src_root' key in the site specific config")
ids_src_root = make_path(ids_src_root)

ids_obj_root = getattr(config, 'ids_obj_root', None)
if not ids_obj_root:
  lit_config.fatal("missing 'ids_obj_root' key in the site specific config")
ids_obj_root = os.path.normpath(ids_obj_root)

if not lit_config.params.get('ids', None):
  lit_config.fatal("missing parameter 'ids'")

lit_config.note('Using idt: {}'.format(lit_config.params['idt']))
lit_config.note('Using FileCheck: {}'.format(config.filecheck_path))

use_lit_shell = os.environ.get('LIT_USE_INTERNAL_SHELL', kIsWindows)
if not use_lit_shell:
  config.available_features.add('shell')

config.test_format = lit.formats.ShTest(execute_external = False)

config.suffixes = ['.hh']
config.excludes = ['CMakeLists.txt']

config.test_source_root = os.path.join(ids_src_root, 'Tests')
config.test_exec_root = os.path.join(ids_obj_root, 'Tests')

config.substitutions.append(('%FileCheck', config.filecheck_path))
config.substitutions.append(('%idt', lit_config.params['idt']))
