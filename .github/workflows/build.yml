name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    # TODO(compnerd) convert this to a build matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        repository: llvm/llvm-project
        ref: llvmorg-12.0.1
        path: llvm-project
        fetch-depth: 1
    - id: llvm-revision
      run: |
        echo "::set-output name=revision::$(git -C ${{ github.workspace }}/llvm-project rev-parse HEAD)"
    - uses: actions/cache@v2
      id: llvm-build
      with:
        path: ${{ github.workspace }}/build/llvm-project
        key: ${{ runner.os }}-${{ steps.llvm-revision.outputs.revision }}
    - if: steps.llvm-build.outputs.cache-hit != 'true'
      run: |
        cmake -B ${{ github.workspace }}/build/llvm-project -D CMAKE_BUILD_TYPE=Release -S ${{ github.workspace }}/llvm-project/llvm
        cmake --build ${{ github.workspace }}/build/llvm-project --config Release --target FileCheck

    - uses: actions/checkout@v2

    - run: |
        mkdir -p ${{ github.workspace }}/third_party
        curl -sL https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz -o ${{ github.workspace }}/third_party/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz 
        tar Jxf ${{ github.workspace }}/third_party/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz -C ${{ github.workspace }}/third_party --strip-components 1

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -D CMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -D LLVM_DIR=${{ github.workspace }}/third_party/lib/cmake/llvm -D Clang_DIR=${{ github.workspace }}/third_party/lib/cmake/clang

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   run: ctest -C ${{ env.BUILD_TYPE }}
      
